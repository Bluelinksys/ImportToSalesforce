<apex:page showHeader="false" sidebar="false" controller="ImportController" standardStylesheets="true">
<html>
    <head>
        <apex:stylesheet value="{!URLFOR($Resource.BootStrap, 'bootstrap/css/bootstrap.css')}"></apex:stylesheet>
        <apex:stylesheet value="{!URLFOR($Resource.Metro, 'metro/assets/font-awesome/css/font-awesome.css')}"></apex:stylesheet>
        <apex:includeScript value="{!$Resource.JQuery}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.BootStrap, 'bootstrap/js/bootstrap.js')}"></apex:includeScript>
        <apex:includeScript value="{!$Resource.AngularJs}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.jqueryExcel, 'shim.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.jqueryExcel, 'jszip.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.jqueryExcel, 'xlsx.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.jqueryExcel, 'ods.js')}"></apex:includeScript>
        <apex:stylesheet value="{!URLFOR($Resource.BootstrapTableDevelop, 'bootstrap-table-develop/dist/bootstrap-table.css')}"></apex:stylesheet>
        <apex:includeScript value="{!URLFOR($Resource.BootstrapTableDevelop, 'bootstrap-table-develop/dist/bootstrap-table.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.BootstrapTableDevelop, 'bootstrap-table-develop/dist/locale/bootstrap-table-zh-CN.js')}"></apex:includeScript>
        <script src="/support/api/44.0/interaction.js"></script>
        <script src="/support/console/44.0/integration.js"></script>
        <style>
            /*列表label对齐*/
            label {
                vertical-align: bottom;
                text-align: right;
            }
            /*必填*/
            .required label:before {
                content:'*';
                color: red;
                font-size: 120%;
                margin: 5px;
            }
            /*重写panel的样式*/
            .panel-default {
                border-color: #007fcc;
                padding-left: 0;
                padding-right: 0;
            }
            .panel-default > .panel-heading {
              color: #333;
               background-color: #007fcc; 
              border-color: #ddd;
            }
            /*重写row*/
            .row {
                margin-right: -15px;
                margin-left: -15px;
                margin-bottom: 10px;
            }

            .pagination-info {
                padding-left:10px !important;
            }
            input.btn {
                border-color: #4a90e2;
                background: #0070d2;
                color: #fff;
                width:auto !important;
                padding: 5px 20px  !important;
            }
            button.btn {
                border-color: #4a90e2;
                background: #0070d2;
                color: #fff;
                width:auto !important;
                padding: 5px 20px  !important;
            }
        </style>
    </head>
    <body>
        <apex:pageMessages />
        <apex:sectionHeader title="{!pageTitle}"></apex:sectionHeader>
        <div class="panel-body" >
            <div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop='static'>
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title" id="myModalLabel">{!$Label.PROMPT}</h4>
                        </div>
                        <div class="modal-body">{!$Label.WAITING}</div>
                    </div>
                </div>
            </div>
            <div ng-app="myApp" ng-controller="myController" ng-init="initPage()">
                <div ng-show="show1">
                    <div class="panel panel-default col-sm-10 col-sm-offset-1" style="margin-top: 20px">
                        <div class="panel-heading tertiaryPalette">
                            <h5 style="font-weight: 800">
                                <i class="icon-reorder"></i>&nbsp;&nbsp;{!pageTitle}
                            </h5>
                        </div>
                        <div class="panel-body">
                            <legend>{!$Label.CHOOSE_IMPORT_FILE}</legend>
                            <div class="row">
                                <div class="col-sm-2">
                                    <input type="file" name="xlfile" id="xlf" />
                                </div>
                            </div> 
                            <div class="row">
                                <div class="col-md-2">
                                    <a href="{!leadUrl}" target="_blank" style="color:red;font-size:12px;">{!$Label.DOWNLOAD_TEMPLATE}</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row text-center" ng-show="show1">
                    <div class="col-sm-offset-4 col-sm-1">
                        <input type="button" class="btn" style="width: 200%" value="{!$Label.BUTTON_UPLOAD}" ng-click="Upload()"/>
                    </div>
                    <div class="col-sm-offset-1 col-sm-1" ng-show="show1">
                        <input type="button" class="btn" style="width: 200%" value="{!$Label.BUTTON_CANCEL}" ng-click="Cancel()"/>
                    </div>
                </div>
                <div class="col-sm-offset-4 col-sm-1" ng-show="show">
                    <input type="button" class="btn" id="saveId" style="width: 200%" value="{!$Label.BUTTON_SAVE}" ng-click="Save()"/>
                </div>
                <div class="col-sm-offset-1 col-sm-1" ng-show="show">
                    <input type="button" class="btn" style="width: 200%" value="{!$Label.BUTTON_CANCEL}" ng-click="Cancel()"/>
                </div>
<!--                 <div class="col-sm-offset-1 col-sm-1" ng-show="show">
                    <input id="button1" type="button" class="btn" style="width: 200%" value="{!$Label.EXPORT_ERROR_DATA}" ng-click="excel()"/>
                </div> -->
                <div ng-show="show">
                    <div class="panel panel-default col-sm-10 col-sm-offset-1" style="margin-top: 20px">
                        <div class="panel-heading panel-heading-color">
                            <h5 style="font-weight: 800">
                                <i class="icon-reorder"></i>&nbsp;&nbsp;{!$Label.WRONG_RESULT}
                            </h5>
                        </div>
                        <div class="panel-body">
                            <table id="countTable" class="table" style="width: 100%; text-align: center;">
                        </table>
                        </div>
                    </div>
                    <div class="panel panel-default col-sm-10 col-sm-offset-1" style="margin-top:20px">
                        <div class="panel-heading panel-heading-color">
                            <h5 style="font-weight: 800">
                                <i class="icon-reorder"></i>&nbsp;&nbsp;{!$Label.SUCCESS_RESULT}
                            </h5>
                        </div>
                        <div class="panel-body">
                            <table id="sucessTable" class="table" style="width: 100%; text-align: center;">
                                <thead>
                                    <tr>
                                        <td ng-repeat="th in theader track by $index">
                                            <text ng-bind="th.title"></text>
                                        </td>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="succ in success track by $index">
                                        <td ng-repeat="th in theader track by $index">
                                            <text ng-bind="succ.data.{{th.field}}"></text>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div  class="panel panel-default col-sm-10 col-sm-offset-1" style="margin-top: 20px" ng-show="show1">
                    <div class="panel-heading panel-heading-color">
                        <h5 style="font-weight: 800">
                            <i class="icon-reorder"></i>&nbsp;&nbsp;{!$Label.IMPORT_INSTRUCTION}
                        </h5>
                    </div>
                    <div class="panel-body">
                        <p>
                            <a style="color: red;font-size: 10px;">{!$Label.IMPORT_DESCRIPTION}</a>
                            <br/>
                            <br/>
                            <a style="color:red;font-size:10px;">1. {!$Label.IMPORT_FORMAT_XLSX_XLS}</a>
                            <br/>
                            <br/>
                            <a style="color:red;font-size:10px;">2. {!limitNumber}</a>
                        </p>
                    </div>
                </div>
            </div>  
        </div>
    </body>
    <script>
        var X = XLSX;
        var myApp = angular.module("myApp", []);
        myApp.controller("myController", function ($scope) {
            var errorInfo = new Array(); 
            var i = 0 ;
            $scope.initPage = function() {

                console.log('*** initPage = 1;');

                $scope.errorMsgs = [];
                $scope.theader = [];
                $scope.duplicates = [];
                $scope.theader = {!tHeaderJson};
                $scope.sourceName = "{!sourceName}";
                $scope.pageTitle = "{!pageTitle}";

                console.log('*** $scope.theader : ' + $scope.theader);

                $scope.result = {};
                $scope.success = {};
                $scope.show = false;
                $scope.show1 = true;
                $scope.showUp = true;
                $scope.num = 1;
                $scope.dataStartRow = {!dataStartRow};
            }

            $scope.Sort = function(list) {
                var tmp = [];

                console.log('*** $scope.Sort.list : ' + list);

                for (var listVal in list) {
                    tmp.push(list[listVal]);
                }

                // 将字符转成ACSII码比较
                tmp = tmp.sort(function(a, b) {
                    if (a.toString().toLowerCase().charCodeAt() > b.toString().toLowerCase().charCodeAt()) {
                        return 1;
                    } else {
                        return -1;
                    }
                });

                console.log('*** $scope.Sort.tmp : ' + tmp);
            }

            $scope.Cancel = function() {
                if ($scope.success.length > 0) {
                    var waring = confirm("{!$Label.SAVE_WARING}");
                    if (waring) {
                        window.location.href='/lightning/o/Lead/list?filterName=Recent';
                    }
                } else {
                    window.location.href='/lightning/o/Lead/list?filterName=Recent';
                }
            }

            $scope.Upload = function() {
                $scope.handleFile();
            }

            $scope.Save = function() {
                $("#saveId").attr("disabled", true);
                var check;

                console.log('*** $scope.Sav.errorInfo : ' + errorInfo);

                if (errorInfo.length > 0 && $scope.success.length > 0) {
                    check = confirm("{!$Label.INCLUDE_ERROR_WARING}")
                } else if (errorInfo.length > 0 && $scope.success.length <= 0) {
                    var callback = confirm("{!$Label.SAVE_ALL_ERROR}")
                    if (callback) {
                        location.reload();
                    }
                } else {
                    check = confirm("{!$Label.IS_SAVE}")
                }

                if (check) {

                    console.log('*** 进入保存操作;');

                    var success = JSON.stringify($scope.dataMap);

                    console.log('*** $scope.Save.success : ' + success);

                    var sucessInpfo = JSON.stringify($scope.success);

                    console.log('*** $scope.Save.sucessInpfo : ' + sucessInpfo);

                    $('#loading').modal('show');

                    errorInfo = new Array();

                    ImportController.Save(success, sucessInpfo, $scope.sourceName,function(result, event) {
                         if (event.status) {
                            $scope.result = JSON.parse(result);

                            if ($scope.result.errMsg == null || $scope.result.errMsg != undefined || $scope.result.errMsg == '') {
                                $('#loading').modal('hide');
                                $scope.$apply(function() {
                                    $scope.errorMsgs = $scope.result.errorList;
                                    errorInfo = $scope.result.errorList;

                                    console.log('*** ImportController.Save.theader : ' + $scope.theader);
                                    console.log('*** ImportController.Save.errorMsgs : ' + $scope.errorMsgs);
                                    console.log('*** ImportController.Save.errorInfo : ' + errorInfo);

                                    $scope.duplicates = $scope.result.duplicateList;
                                    $scope.success = $scope.result.sucessList;
                                    $scope.tableInit();
                                    $scope.show1 = false;

                                    if ($scope.num > 1) {
                                        $scope.num -= $scope.num;
                                    }

                                    $scope.num++;
                                });

                                var allowPartialUpdate = {!allowPartialUpdate};
                                if (errorInfo == null || errorInfo.length <= 0 || allowPartialUpdate) {
                                    alert("{!$Label.SAVE_SECCUSS_INFO}");
                                    location.reload();
                                }
                            } else if ($scope.result.errMsg != null && $scope.result.errMsg != undefined && $scope.result.errMsg != '') {
                                var a = $('#loading').modal('hide');
                                alert($scope.result.errMsg);
                            }
                        } else if (event.type === 'exception') {
                            alert(event.message + event.where);
                            $('#loading').modal('hide');
                        } else {
                            alert(event.message);
                            $('#loading').modal('hide');
                        }
                    }, {escape: false});
                } else {
                    $("#saveId").attr("disabled", false);
                }
            }

            $scope.to_json = function(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function(sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName], {"header":"A"});
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });

                return result;
            }

            $scope.handleFile = function() {
                var xlf = document.getElementById('xlf');
                var files = xlf.files;
                var f = files[0];
                if (f == null || f == undefined) {
                    alert("{!$Label.CHOOSE_FILE}");
                    return;
                } else {
                    var reader = new FileReader();
                    var name = f.name;
                    var nameSuffix = name.split(".");
                    if (nameSuffix[nameSuffix.length-1].toUpperCase() != 'XLSX' && nameSuffix[nameSuffix.length-1].toUpperCase() != 'XLS') {
                        alert("{!$Label.CHOOSE_XLS_XLSX}");
                        return;
                    }

                    try {
                        reader.readAsBinaryString(f);
                        reader.onload = function(e) {
                            if (!e) {
                                var data = reader.content;
                            } else {
                                var data = e.target.result;
                            }

                            var wb = X.read(data, {type: 'binary'});

                            console.log('*** $scope.handleFile.dataStartRow : ' + $scope.dataStartRow);

                            var output = JSON.stringify($scope.to_json(wb), 0, 0);
                            if (output == null || output == undefined) {
                                alert("{!$Label.IS_NONE}");
                            } else {

                                $('#loading').modal('show');
                                ImportController.upload($scope.sourceName, $scope.pageTitle, output, function(result,event) {
                                    if (event.status) {
                                        console.log(result);
                                        $scope.result = JSON.parse(result);
                                        console.log($scope.result);
                                        if ($scope.result.errMsg == null || $scope.result.errMsg == '') {
                                            $('#loading').modal('hide');
                                            $scope.$apply(function() {
                                                $scope.dataMap = $scope.result.sObjectMap;

                                                console.log('*** ImportController.upload.dataMap : ' + $scope.dataMap);

                                                $scope.errorMsgs = $scope.result.errorList;
                                                errorInfo = $scope.result.errorList;
                                                $scope.duplicates = $scope.result.duplicateList;

                                                console.log('*** ImportController.upload.duplicates : ' + $scope.duplicates);

                                                $scope.success = $scope.result.sucessList;
                                                $scope.tableInit();
                                                $scope.show1 = false;
                                                $scope.show =! $scope.show;

                                                if($scope.num > 1) {
                                                    window.history.back(-1);
                                                    $scope.num -= $scope.num;
                                                }
                                                $scope.num++;
                                            });
                                        } else if ($scope.result.errMsg != null || $scope.result.errMsg != undefined) {
                                            var a = $('#loading').modal('hide');
                                            alert($scope.result.errMsg);
                                        }
                                    } else if (event.type === 'exception') {
                                        alert(event.message + event.where);
                                        $('#loading').modal('hide');
                                    } else {
                                        alert(event.message);
                                        $('#loading').modal('hide');
                                    }
                                    
                                }, {escape: false});
                            }
                        }
                    } catch(ex) {
                        alert('{!$Label.CHOOSE_CHROME}' + ex);
                    }
                }
            }

            if (!FileReader.prototype.readAsBinaryString) {
                    FileReader.prototype.readAsBinaryString = function (fileData) {
                        var binary = "";
                        var pt = this;
                        var reader = new FileReader();
                        reader.onload = function (e) {
                           var bytes = new Uint8Array(reader.result);
                           var length = bytes.byteLength;
                           for (var i = 0; i < length; i++) {
                               binary += String.fromCharCode(bytes[i]);
                           }

                        pt.content = binary;
                        j$(pt).trigger('onload');
                    }
                    reader.readAsArrayBuffer(fileData);
                }
            }

            $scope.tableInit = function() {
                $("#countTable").bootstrapTable('destroy'); 
                $("#sucessTable").bootstrapTable('destroy'); 
                $('#countTable').bootstrapTable({
                    method:'POST',
                    dataType:'json',
                    contentType: "application/x-www-form-urlencoded",
                    cache: false,
                    striped: true,                      //是否显示行间隔色
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    showColumns:true,
                    pagination:true,
                    minimumCountColumns:2,
                    pageNumber:1,                       //初始化加载第一页，默认第一页
                    pageSize: 20,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: true,
                    strictSearch: true,
                    // showRefresh: true,
                    uniqueId: "rowIndex",                     //每一行的唯一标识，一般为主键列
                    showExport: false,                    
                    exportDataType: 'all',
                    exportTypes:[ 'csv', 'txt', 'sql', 'doc', 'excel', 'xlsx', 'pdf'],  //导出文件类型
                    columns: [{
                        field: 'rowIndex',
                        title: '{!$Label.IMPORT_ERROR_ROW_INDEX}'
                    }, {
                        field: 'errorField',
                        title: '{!$Label.IMPORT_ERROR_FIELD_NAME}'
                    }, {
                        field: 'errorMessage',
                        title: '{!$Label.IMPORT_ERROR_MESSAGE}'
                    }],
                    data:errorInfo
                });

                var columnsArray = new Array();
                var successArray = new Array();

                console.log('*** $scope.tableInit.errorInfo : ' + errorInfo);
                console.log('*** $scope.tableInit.theader : ' + $scope.theader);
                console.log('*** $scope.tableInit.success : ' + $scope.success);

                angular.forEach($scope.theader, function(data, index, objs) {
                    columnsArray.push({field:data.title,title:data.title});
                });

                $scope.successArray = angular.copy($scope.success);
                angular.forEach($scope.successArray, function(succeed, index, objs) {
                    angular.forEach(succeed.rowData, function(data, index, objs) {
                        var a =  parseInt(data);

                        if (!isNaN(a) && data.length == undefined) {
                            objs[index] = $scope.timestampToTime(a);
                        }
                    });
                    successArray.push(succeed.rowData);
                });

                console.log('*** $scope.tableInit.columnsArray : ' + JSON.stringify(columnsArray));
                console.log('*** $scope.tableInit.successArray : ' + JSON.stringify(successArray));

                $('#sucessTable').bootstrapTable({
                    method:'POST',
                    dataType:'json',
                    contentType: "application/x-www-form-urlencoded",
                    cache: false,
                    striped: true,                      //是否显示行间隔色
                    sidePagination: "client",           //分页方式：client客户端分页，server服务端分页（*）
                    showColumns:true,
                    pagination:true,
                    minimumCountColumns:2,
                    pageNumber:1,                       //初始化加载第一页，默认第一页
                    pageSize: 20,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: true,
                    strictSearch: true,
                    uniqueId: "ind1",                     //每一行的唯一标识，一般为主键列
                    showExport: false,                    
                    exportDataType: 'all',
                    exportTypes:[ 'csv', 'txt', 'sql', 'doc', 'excel', 'xlsx', 'pdf'],  //导出文件类型
                    columns: columnsArray,
                    data:successArray
                });

                console.log('执行完毕');
            }

            $scope.timestampToTime = function(timestamp) {
                var date = new Date(timestamp);
                var seperator1 = "-";
                var seperator2 = ":";
                var month = date.getMonth() + 1;
                var strDate = date.getDate();
                if (month >= 1 && month <= 9) {
                    month = "0" + month;
                }

                if (strDate >= 0 && strDate <= 9) {
                    strDate = "0" + strDate;
                }

                var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate;
                return currentdate;
            }
        });
    </script>
</html>
</apex:page>